#!/bin/sh

usage() {
    cat << EOF
USAGE:
    apk <SUBCOMMAND>

SUBCOMMANDS:
    list           List all the installed modules
    prepare        Prepare a sequences of install/remove commands
    install        Install a module
    remove         Uninstall a module
    finalize       Finalize a sequences of install/remove commands
EOF
}

unsupported_args_check() {
    if ! [ -z $1 ]; then
        echo "Unsupported arguments: $@"
        exit 1
    fi
}

extract_image_tag_from_args() {
    IMAGE_NAME="$1"
    if [ -z "$IMAGE_NAME" ]; then
        echo "Image name is a mandatory argument"
        exit 1
    fi
    shift   # Pop image name from args list
    IMAGE_TAG=$IMAGE_NAME

    if ! [ -z $1 ]; then
        case "$1" in
            --module-version)
                IMAGE_VERSION="$2"
                IMAGE_TAG=$IMAGE_NAME=$IMAGE_VERSION
                shift 2  # Pop --version and the version value from the args list
                ;;
            *)
                echo "Unsupported argument option: $1"
                exit 1
                ;;
        esac
    fi

    unsupported_args_check $@

}

if [ -z $1 ]; then
    echo "Provide at least one subcommand\n"
    usage
    exit 1
fi

COMMAND="$1"
shift   # Pop the command from args list

case "$COMMAND" in
    prepare)
        unsupported_args_check $@
        apk update
        ;;
    list)
        unsupported_args_check $@
        # Make sure perl is installed
        apk list | cut -d' ' -f1 | sed 's|\(.*\)-\(.*-.*\)$|\1\t\2|g' || exit 2
        ;;
    install)
        # Extract the apk image tag into the IMAGE_TAG variable
        extract_image_tag_from_args $@

        # Installating
        apk add $IMAGE_TAG || exit 2
        ;;
    remove)
        unsupported_args_check $@
        # Removing
        apk del $IMAGE_NAME || exit 2
        ;;
    finalize)
        unsupported_args_check $@
        ;;
    *)
        echo "Unsupported command: $COMMAND"
        exit 1
        ;;
esac